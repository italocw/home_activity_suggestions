// Mocks generated by Mockito 5.4.4 from annotations
// in home_activity_suggestions/test/features/suggestions/domain/suggestion_converter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:flutter/material.dart' as _i4;
import 'package:home_activity_suggestions/features/suggestions/domain/entities/suggestion.dart'
    as _i6;
import 'package:home_activity_suggestions/features/suggestions/domain/entities/suggestion_category.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDocumentReference_0<T1 extends Object?> extends _i1.SmartFake
    implements _i2.DocumentReference<T1> {
  _FakeDocumentReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnapshotMetadata_1 extends _i1.SmartFake
    implements _i2.SnapshotMetadata {
  _FakeSnapshotMetadata_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSuggestionCategory_2 extends _i1.SmartFake
    implements _i3.SuggestionCategory {
  _FakeSuggestionCategory_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIconData_3 extends _i1.SmartFake implements _i4.IconData {
  _FakeIconData_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [QueryDocumentSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockQueryDocumentSnapshot<T extends Object?> extends _i1.Mock
    implements _i2.QueryDocumentSnapshot<T> {
  MockQueryDocumentSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  _i2.DocumentReference<T> get reference => (super.noSuchMethod(
        Invocation.getter(#reference),
        returnValue: _FakeDocumentReference_0<T>(
          this,
          Invocation.getter(#reference),
        ),
      ) as _i2.DocumentReference<T>);

  @override
  _i2.SnapshotMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeSnapshotMetadata_1(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i2.SnapshotMetadata);

  @override
  bool get exists => (super.noSuchMethod(
        Invocation.getter(#exists),
        returnValue: false,
      ) as bool);

  @override
  T data() => (super.noSuchMethod(
        Invocation.method(
          #data,
          [],
        ),
        returnValue: _i5.dummyValue<T>(
          this,
          Invocation.method(
            #data,
            [],
          ),
        ),
      ) as T);

  @override
  dynamic get(Object? field) => super.noSuchMethod(Invocation.method(
        #get,
        [field],
      ));

  @override
  dynamic operator [](Object? field) => super.noSuchMethod(Invocation.method(
        #[],
        [field],
      ));
}

/// A class which mocks [SuggestionCategoryLocator].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionCategoryLocator extends _i1.Mock
    implements _i3.SuggestionCategoryLocator {
  MockSuggestionCategoryLocator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.SuggestionCategory locateCategoryById({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #locateCategoryById,
          [],
          {#id: id},
        ),
        returnValue: _FakeSuggestionCategory_2(
          this,
          Invocation.method(
            #locateCategoryById,
            [],
            {#id: id},
          ),
        ),
      ) as _i3.SuggestionCategory);
}

/// A class which mocks [Suggestion].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestion extends _i1.Mock implements _i6.Suggestion {
  MockSuggestion() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#title),
        ),
      ) as String);

  @override
  String get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#description),
        ),
      ) as String);

  @override
  _i3.SuggestionCategory get category => (super.noSuchMethod(
        Invocation.getter(#category),
        returnValue: _FakeSuggestionCategory_2(
          this,
          Invocation.getter(#category),
        ),
      ) as _i3.SuggestionCategory);

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);

  @override
  bool get stringify => (super.noSuchMethod(
        Invocation.getter(#stringify),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [SuggestionCategory].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionCategory extends _i1.Mock
    implements _i3.SuggestionCategory {
  MockSuggestionCategory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i4.IconData get iconData => (super.noSuchMethod(
        Invocation.getter(#icon),
        returnValue: _FakeIconData_3(
          this,
          Invocation.getter(#icon),
        ),
      ) as _i4.IconData);

  @override
  String get color => (super.noSuchMethod(
        Invocation.getter(#color),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#color),
        ),
      ) as String);
}
